name: Release

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0
  workflow_dispatch: # Allows manual trigger

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install Rust target (macOS ARM only)
        if: matrix.platform.target == 'aarch64-apple-darwin'
        run: rustup target add aarch64-apple-darwin

      - name: Install frontend dependencies
        run: npm install

      - name: Sync configuration
        run: npm run sync-config

      - name: Generate changelog
        id: changelog
        shell: bash
        run: |
          # Get previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges $PREVIOUS_TAG..HEAD)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'VTproxy ${{ github.ref_name }}'
          releaseBody: |
            VTproxy Desktop Application ${{ github.ref_name }}
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Downloads
            
            ### Installers
            - **Windows**: `.msi` installer
            - **macOS**: `.dmg` installer  
            - **Linux**: `.deb`, `.AppImage`, or `.rpm`
            
            ### Standalone Binaries
            - **Windows**: `vtproxy-windows.exe` (no installer needed)
            - **Linux**: `vtproxy-linux` (requires system GTK/WebKit libraries)
            
            See the [README](https://github.com/${{ github.repository }}) for usage instructions.
          releaseDraft: false
          prerelease: false
          args: --target ${{ matrix.platform.target }}
      
      - name: Upload standalone binary (Linux)
        if: matrix.platform.os == 'ubuntu-22.04'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mv src-tauri/target/${{ matrix.platform.target }}/release/vtproxy vtproxy-${{ github.ref_name }}-linux-x86_64
          gh release upload ${{ github.ref_name }} vtproxy-${{ github.ref_name }}-linux-x86_64 --clobber
      
      - name: Upload standalone binary (Windows)
        if: matrix.platform.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mv src-tauri/target/${{ matrix.platform.target }}/release/vtproxy.exe vtproxy-${{ github.ref_name }}-windows-x86_64.exe
          gh release upload ${{ github.ref_name }} vtproxy-${{ github.ref_name }}-windows-x86_64.exe --clobber
